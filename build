#! /usr/bin/env ruby
require 'babel/transpiler'
require 'rake'
require 'optparse'

# A simple script to transpile our source ES6 in src/javascripts to standard ES5
# javascript in app/assets/javascripts/session_timeout_prompter.js

TARGET_JS_PATH = "#{File.dirname(__FILE__)}/app/assets/javascripts/session_timeout_prompter.js"
SRC_DIRECTORY  = "#{File.dirname(__FILE__)}/src/javascripts"

options = {}
option_parser = OptionParser.new do |opts|

  opts.banner = "Usage: build [options]"
  opts.on("-j", "--jasmine", "Run Jasmine tests only") do |v|
    options[:jasmine_only] = v
  end

  opts.on("-r", "--rspec", "Run RSpec tests only") do |v|
    options[:rspec_only] = v
  end

  opts.on("-h", "--help", "Show help") do |v|
    options[:help] = v
  end

end
option_parser.parse!

if options[:help]
  puts option_parser.help()
else

  js_files_to_transpile = Dir.glob("#{SRC_DIRECTORY}/**/*.js")

  File.open TARGET_JS_PATH, 'w' do |output_file|
    js_files_to_transpile.each do |js_file_path|
      puts "Transpiling #{js_file_path}..."
      transpiled_js = Babel::Transpiler.transform File.read(js_file_path)
      output_file.puts transpiled_js['code']
    end
  end

  app = Rake.application
  app.init
  app.load_rakefile

  unless options[:rspec_only]
    puts "Running Jasmine..."
    app['jasmine:ci'].invoke
  end

  unless options[:jasmine_only]
    puts "Running RSpec..."
    app['spec'].invoke
  end

end
